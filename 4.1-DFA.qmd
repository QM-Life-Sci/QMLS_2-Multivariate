---
title: "Discriminant Function Analysis"
author:
  - Elizabeth King
  - Kevin Middleton
format:
  revealjs:
    theme: [default, custom.scss]
    standalone: true
    self-contained: true
    logo: QMLS_Logo.png
    slide-number: true
    show-slide-number: all
bibliography: Multivariate.bib
csl: evolution.csl
---

## DFA is the converse of MANOVA


```{r}
#| label: setup
#| echo: false
#| warning: false
#| message: false

library(tidyverse)
library(cowplot)
library(GGally)
library(plotly)
library(MASS)
library(mvtnorm)
set.seed(87231)

ggplot2::theme_set(theme_cowplot())
```

**Discriminant Function Analysis**

`Site ~ Height + Mouth_Diam + Tube_Diam + Keel_Diam`

How well can a multivariate set of variables predict group membership (a categorical variable)? 

**MANOVA**:

`Height + Mouth_Diam + Tube_Diam + Keel_Diam ~ Site`

How well can a categorical predictor variable jointly predict a multivariate set of outcome variables?

## DFA is the converse of MANOVA

- MANOVA emphasizes decision-making (hypothesis testing) and asking if groups are different
- DFA emphasizes prediction of group membership
  - Which predictors relate to group differences
- Mathematically they do the same thing

## Simulated Data

```{r}
#| echo: true
nn <- 25
dat <- tibble(y1 = c(rnorm(nn),rnorm(nn,2)),
              y2 = c(rnorm(nn),rnorm(nn,2)),
              y3 = c(rnorm(nn),rnorm(nn,2)),
              xx = rep(c("A","B"), each = nn))
```


## Simulated Data

```{r}
#| warning: false

fig <- plot_ly() |>
  add_markers(data = dat,
              x = ~ y1,
              y = ~ y2,
              z = ~ y3,
              color = ~ xx,
              marker = list(size = 5),
              showlegend = FALSE) |>
  layout(scene = list(xaxis = list(title = 'y1'),
                      yaxis = list(title = 'y2'),
                      zaxis = list(title = 'y3')))

fig
```

## DFA

- `lda()` is the function to perform linear discriminant analysis in R

```{r}
#| echo: true

MM <- lda(xx ~ y1 + y2 + y3, data = dat)
MM$scaling
```

## DFA

- identifies the composite that maximally separates the groups on the dimensions of the response variable
- MANOVA performs an ANOVA using this composite as the response variable

$$Y_{composite} = 0.74~y_{1} + 0.49~y_{2} + 0.47~y_{3}$$

## Visualize for 2 continuous variables and 2 groups

```{r}
#| echo: true 
nn <- 25
dat <- tibble(y1 = c(rnorm(nn),rnorm(nn,2)),
              y2 = c(rnorm(nn),rnorm(nn,2)),
              xx = rep(c("A","B"), each = nn))

dat <- dat |>
  mutate(y1_s = scale(y1),
         y2_s = scale(y2))

dfa <- lda(xx ~ y1 + y2, data = dat)
dfa$scaling
```

## Visualize for 2 continuous variables and 2 groups

```{r}
#| echo: true
#| output-location: slide
#| fig-width: 7
#| fig-height: 5
#| fig-align: center

dat |>
  ggplot(aes(y1_s,y2_s, color = xx)) +
  geom_point(size = 4) + 
  geom_abline(intercept=0, slope = -dfa$scaling[1]/dfa$scaling[2], linewidth = 2)

```

$$Y_{composite} = ~LD1~y_{s1} + LD2~y_{s2}$$

$$y_{s2} = -\frac{LD1}{LD2}~y_{s1}$$

```{r}
#| echo: true
#| output-location: slide
#| fig-width: 7
#| fig-height: 5
#| fig-align: center

dat$ycomp <- dfa$scaling[1]*dat$y1_s + dfa$scaling[2]*dat$y2_s
  
dat |>
  ggplot(aes(xx,ycomp, color = xx)) +
  geom_point(size = 4, position = position_jitter(width = 0.2))

```

```{r}

pcaM <- prcomp(~y1+y2, data=dat, center =TRUE, scale.=TRUE)
dat$pc1 <- pcaM$x[,1]
dat$pc2 <- pcaM$x[,2]

dat |>
  ggplot(aes(ycomp,-pc1, color = xx)) +
  geom_point(size = 4) +
  geom_vline(xintercept = 0) +
  geom_hline(yintercept = 0) +
  geom_abline(slope = 1,intercept = 0) +
  xlab("DFA score") +
  ylab("PCA score")


```

## References

::: {#refs}
:::
